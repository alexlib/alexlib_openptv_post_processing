function convert_hdf4_to_ptv_is(hdfFile,first,last)% CONVERT_HDF4_TO_PTV_IS(HDFFILE) - Reads the data from HDF file and writes% a directory of ptv_is.xxxx files%% Syntax: CONVERT_HDF4_TO_PTV_IS(HDFFILE)%% Inputs:% HDFFILE = name of the HDF4 file, e.g. 0104_hompol.hdf (default)% FIRST = first file to use% LAST = last file to use%%%  Example:%%  CONVERT_HDF4_TO_PTV_IS('0104_hompol.hdf',1,2990)%% Subfunctions:%   See also:% AUTHOR    : Alex Liberzon% Copyright (c)2012  Tel Aviv University%%if ~nargin    hdfFile = '../HDF/0104_hompol.hdf';    first = 1;    last =  2990;endons = ones(2000,1);zrs = zeros(2000,1);ptv_is = repmat(struct('prev',-1*ons,'next',-2*ons,'x',zrs,'y',zrs,'z',zrs,'n',0),[3000,1]);for iFrame = first:last    clear f1        fprintf(1,'%d\n',iFrame);        f1 = hdfread(hdfFile,...        sprintf('/%d',iFrame), 'Fields', ...        'x,y,z,t', ...        'FirstRecord',1);        [x,y,z,t] = deal(f1{1:4});        % this file includes all the trajectories that started in iFrame    starts = find(t == iFrame);    ends = [starts(2:end)-1, length(x)];        for trajInd = 1:numel(starts) % for all trajectories        start = starts(trajInd);  % location of the first point        ende = ends(trajInd);     % location of the last point                for tInd = t(start):t(ende)            ptv_is(tInd).n = ptv_is(tInd).n + 1; % new line number        end                % tInd = time instance => frame number => new ptv_is.xxxx file        for ind = start:ende            tInd = t(ind);            ptv_is(tInd).x(ptv_is(tInd).n) = x(ind);            ptv_is(tInd).y(ptv_is(tInd).n) = y(ind);            ptv_is(tInd).z(ptv_is(tInd).n) = z(ind);            if tInd > t(start)                ptv_is(tInd).prev(ptv_is(tInd).n) = ptv_is(tInd-1).n;            else                ptv_is(tInd).prev(ptv_is(tInd).n) = 0;            end                        if tInd < t(ende)                ptv_is(tInd).next(ptv_is(tInd).n) = ptv_is(tInd+1).n;            else                ptv_is(tInd).next(ptv_is(tInd).n) = -1;                            end        end    endend[~,name,~] = fileparts(hdfFile);mkdir(name);cd(name)for iFiles = first:t(ende)    fid = fopen(sprintf('ptv_is.1%05d',iFiles),'w');    fprintf(fid,'%d\n',ptv_is(iFiles).n);    for iLines = 1:ptv_is(iFiles).n        fprintf(fid,'%d %d %6.4f %6.4f %6.4f\n',...            ptv_is(iFiles).prev(iLines)-1,...            ptv_is(iFiles).next(iLines)-1,...            ptv_is(iFiles).x(iLines),...            ptv_is(iFiles).y(iLines),...            ptv_is(iFiles).z(iLines));    end    fclose(fid);end